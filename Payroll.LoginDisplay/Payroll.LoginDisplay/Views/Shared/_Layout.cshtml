<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />
    <title>@ViewBag.Title</title>
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")

</head>
<body>
    <div class="container body-content">
        @RenderBody()
    </div>

    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    <script src="~/Scripts/jquery.signalR-2.2.0.min.js"></script>
    <script src="~/signalr/hubs"></script>

    <script type="text/javascript">

        //private functions
        function handleBroadCastMessageSuccess(response) {
            $('#timeintimeout').html(response);
            displayPanel('timeintimeout');

            window.setTimeout(function () {
                displayPanel('timer');
            }, 10000);
        }

        function handleRegisterClick(payrollHub) {
            $('.js-error').addClass('hidden');
            var ipAddress = $('#txtIpAddress').val();
            if (ipAddress != '') {
                payrollHub.server.connect(ipAddress);
            } else {
                $('.js-error').removeClass('hidden');
            }
        }

        function displayPanel(panelId) {
            $('.js-container').addClass('hidden');
            $('#' + panelId).removeClass('hidden');
        }


        //client events
        function registerClientEvents(payrollHub) {
            payrollHub.client.onConnected = function () {
                logMessage('Connected');
                displayPanel('timer');
            };

            payrollHub.client.broadcastMessage = function (id, attCode, datetime) {
                logMessage('broadcasting:' + id + ' ' + attCode + ' ' + datetime);
                $.ajax({
                    url: '/Payroll/DisplayTimeInOut/' + id + '/' + attCode + '/' + datetime,
                    method: 'GET',
                    data: { id: id, attCode: attCode, datetime: datetime },
                    success: handleBroadCastMessageSuccess
                });
            };
        }

        function showDisconnectedMessage(connected) {
            if (!connected) {
                $('.js-errorMessage').removeClass('hidden');
                $('.js-errorMessage').html('Disconnected');
            } else {
                $('.js-errorMessage').addClass('hidden');
                $('.js-errorMessage').html('');
            }
        }

        function logMessage(message) {
            var datetime = getDateTime();
            var strDateTime = datetime.date + ' ' + datetime.time;
            console.log('******' + message + ': ' + strDateTime + '******');
        }

        $(function () {
            var payrollHub = $.connection.payrollHub;
            registerClientEvents(payrollHub);


            //$.connection.hub.start();
            $.connection.hub.logging = true;
            $.connection.hub.start().done(function () {
                $('#Register').click(function () { handleRegisterClick(payrollHub); });
            });

            $.connection.hub.disconnected(function () {
                logMessage('Disconnected');
                showDisconnectedMessage(false);
                $.connection.hub.start().done(function () {
                    showDisconnectedMessage(true);
                    handleRegisterClick(payrollHub);
                });
                
            });
        });


        function formatTime(i) {
            if (i < 10) { i = "0" + i; };  // add zero in front of numbers < 10
            return i;
        }

        function getDateTime() {
            var today = new Date();
            var locale = "en-us";

            var year = today.getFullYear();
            var month = today.toLocaleString(locale, { month: "long" });
            var day = formatTime(today.getDate());

            var h = today.getHours();
            var m = today.getMinutes();
            var s = today.getSeconds();
            var strTime = h > 12 ? ' pm' : ' am';

            h = formatTime(h > 12 ? h - 12 : h);
            m = formatTime(m);
            s = formatTime(s);

            return {
                date: month + ' ' + day + ' ' + year,
                time: h + ':' + m + ':' + s + strTime
            }
        }

        function startTimer() {

            var datetime = getDateTime();

            $('.time').html(datetime.time);
            $('.date').html(datetime.date);

            setTimeout(startTimer, 1000);
        }

        $(document).ready(function () {
            startTimer();
        });

    </script>
    @RenderSection("scripts", required: false)
</body>
</html>
