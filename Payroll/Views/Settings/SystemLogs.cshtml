@using Payroll.Entities.Enums
@using Payroll.Extension
@model Payroll.Models.Settings.SystemLogViewModel

@{
    ViewBag.Title = "System Logs";
}

<h2>System Logs</h2>

@using (Html.BeginForm("SystemLogs", "Settings", FormMethod.Get))
{
    <div class="form-horizontal">
        <div class="form-group">
            <label class="control-label col-md-2" for="StartDate">Start Date: </label>
            <div class="col-md-4">
                @Html.DatePickerFor("StartDate", Model.StartDate, new { @class = "form-control datepicker js-startDate" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2" for="EndDate">End Date: </label>
            <div class="col-md-4">
                @Html.DatePickerFor("EndDate", Model.EndDate, new { @class = "form-control datepicker js-endDate" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button type="submit" class="btn btn-primary">Submit</button>
            </div>
        </div>
    </div>
}


@if (Model.Logs != null && Model.Logs.Any())
{
    <table class="table table-responsive table-striped table-hover">
        <tr>
            <th>Log Id</th>
            <th>Date Logged</th>
            <th>Level</th>
            <th>UserName</th>
            <th>Message</th>
            <th>Url</th>
            <th>Logger</th>
            <th>Callsite</th>
            <th>Exception</th>
        </tr>

        @foreach (var item in Model.Logs)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.LogId)
                </td>
                <td>
                    @item.DateLogged.ToShortDateString()
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Level)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.UserName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Message)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Url)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Logger)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Callsite)
                </td>
                <td>
                    @if (!String.IsNullOrEmpty(item.Exception))
                    {
                        <a href="javascript:void(0)" class="btn btn-primary">View Exception</a>
                    }
                </td>
            </tr>
        }
    </table>
}

@if (ViewBag.NoResult != null)
{
    <div>No results found</div>
}
