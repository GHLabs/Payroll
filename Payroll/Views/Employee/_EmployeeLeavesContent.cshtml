@using Payroll.Entities.Enums
@model IEnumerable<Payroll.Entities.Payroll.EmployeeLeave>

<table class="table table-responsive">
    <tr>
        <th>Start Date</th>
        <th>End Date</th>
        <th>Name</th>
        <th>Leave</th>
        <th>Status</th>
        <th>Approved by</th>
        <th>Hours</th>
        <th>Reason</th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @item.StartDate.ToShortDateString()
            </td>
            <td>
                @item.EndDate.ToShortDateString()
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Employee.FullName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Leave.LeaveName)
            </td>
            <td>
                @item.LeaveStatus.ToString()
            </td>
            <td>
                @(item.User != null ? String.Format("{0} {1}", item.User.FirstName, item.User.LastName) : "")
            </td>
            <td>
                @item.Hours
            </td>
            <td>
                @item.Reason
            </td>
            <td>
                @Html.ActionLink("Edit", "EditEmployeeLeave", new { id = item.EmployeeLeaveId }) | 

                @if (item.LeaveStatus == LeaveStatus.Pending)
                {
                    @Html.ActionLink("Delete", "DeleteEmployeeLeave", new { id = item.EmployeeLeaveId }, new { @class = "js-maintenanceDelete" }) <text> | </text>
                    @Html.ActionLink("Approve", "ApproveRejectLeave", new { id = item.EmployeeLeaveId, status = LeaveStatus.Approved })    <text> | </text>
                    @Html.ActionLink("Do NOT Approve", "ApproveRejectLeave", new { id = item.EmployeeLeaveId, status = LeaveStatus.NotApproved })
                }
            </td>
        </tr>
    }
</table>