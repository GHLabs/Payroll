@using Payroll.Common.Enums
@model Payroll.Models.Employee.EmployeeListViewModel

@{
    ViewBag.Title = "Employee List";
}

<h2>Employee List</h2>

<div class="row">
    <div class="col-md-6 pull-left t1">
        @Html.ActionLink("Create New", "Create")
    </div>
    <div class="col-md-6">
        <div class="pull-right">
            <div class="input-group">
                <input type="text" id="search" placeholder="Search name or code here" class="form-control b1 js-searchEmployee" value="@(ViewBag.SearchCriteria ?? "")" />
                <span class="input-group-btn">
                    <button class="btn btn-primary js-search" type="button">Go! </button>
                </span>
            </div>
        </div>
    </div>
</div>

<table class="table t1 table-responsive">
    <tr>
        <th>
            Id
        </th>
        <th>
            Code
        </th>
        <th>
            First Name
        </th>
        <th>
            Last Name
        </th>
        <th>
            Middle Name
        </th>
        <th>
            Nickname
        </th>
        <th>
            Gender
        </th>
        <th>
            Actual Date Hired
        </th>
        <th>
            Date Hired (SSS Based)
        </th>
        <th>
            Employment Status
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model.Employees)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Employee.EmployeeId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Employee.EmployeeCode)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Employee.FirstName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Employee.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Employee.MiddleName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Employee.NickName)
            </td>
            <td>
                @((Gender)item.Employee.Gender == Gender.Male ? "Male" : "Female ")
            </td>
            <td>
                @item.DateHired.ToString("MM/dd/yyyy")
            </td>
            <td>
                @(item.CustomDate1 != null ? item.CustomDate1.Value.ToString("MM/dd/yyyy") : "")
            </td>
            <td>
                @((EmploymentStatus)item.EmploymentStatus == EmploymentStatus.Regular ? "Regular" : "Contractual")
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.EmployeeId }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.EmployeeId }, new { @class = "js-employeeDelete" })
            </td>
        </tr>
    }

</table>

@Html.Partial("Pagination", Model.Pagination)

@section scripts
{
    <script type="text/javascript" src="/Scripts/pagination.js"></script>
    <script type="text/javascript" src="/Scripts/Employee/employeelist.js"></script>
}
