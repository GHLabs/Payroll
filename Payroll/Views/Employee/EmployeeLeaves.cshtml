@using Payroll.Common.Extension
@using Payroll.Entities.Enums
@model Payroll.Models.Employee.EmployeeLeaveListViewModel

@{
    ViewBag.Title = "Employee Leaves";
}

<h2>Employee Leaves</h2>

<div class="row">
    <div class="col-md-6 pull-left t1">
        @Html.ActionLink("Create New", "Create")
    </div>
    <div class="col-md-6">
        <div class="pull-right">
            <div class="input-group">
                <input type="text" id="search" placeholder="Search name or code here" class="form-control b1 js-searchEmployee" value="@(ViewBag.SearchCriteria ?? "")" />
                <span class="input-group-btn">
                    <button class="btn btn-primary js-search" type="button">Go! </button>
                </span>
            </div>
        </div>
    </div>
</div>

<table class="table table-responsive">
    <tr>
        <th>Date</th>
        <th>Name</th>
        <th>Leave</th>
        <th>Status</th>
        <th>Approved by</th>
        <th>Hours</th>
        <th>Reason</th>
        <th></th>
    </tr>

    @foreach (var item in Model.Employees.SelectMany(x => x.Employees))
    {
        <tr>
            <td>
                @item.Date.ToShortDateString()
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Employee.FullName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Leave.LeaveName)
            </td>
            <td>
                @item.LeaveStatus.ToString()
            </td>
            <td>
                @(item.User != null ? String.Format("{0} {1}", item.User.FirstName, item.User.LastName) : "")
            </td>
            <td>
                @item.Hours
            </td>
            <td>
                @item.Reason
            </td>
            <td>
                @if (item.Date > DateTime.Now)
                {
                    @Html.ActionLink("Edit", "EditEmployeeLeave", new { id=item.EmployeeLeaveId })<text> | </text>
                }

                @if (item.Date > DateTime.Now && item.LeaveStatus == LeaveStatus.Pending)
                {
                    @Html.ActionLink("Delete", "DeleteEmployeeLeave", new { id = item.EmployeeLeaveId }, new { @class = "js-maintenanceDelete" }) <text> | </text>
                    @Html.ActionLink("Approve", "ApproveRejectLeave", new { id = item.EmployeeLeaveId, status = LeaveStatus.Approved })    <text> | </text>
                    @Html.ActionLink("Do NOT Approve", "ApproveRejectLeave", new { id = item.EmployeeLeaveId, status = LeaveStatus.NotApproved })
                }
            </td>
        </tr>
    }

</table>

@section scripts
{
    <script type="text/javascript" src="/Scripts/Maintenance/maintenance.js"></script>
}
